Parameters:
  ProjectName:
    Type: String
    Default: mybookstore

Conditions:
  IADRegion: !Equals [!Ref "AWS::Region", "us-east-1"]
    
Mappings:
  S3Buckets:
    us-east-1:
      Bucket: aws-bookstore-demo-app-us-east-1
      NeptuneDataBucket: bookstore-neptune
    us-west-2:
      Bucket: aws-bookstore-demo-app-us-west-2
      NeptuneDataBucket: bookstore-neptune-us-west-2
    eu-central-1:
      Bucket: aws-bookstore-demo-app-eu-central-1
      NeptuneDataBucket: bookstore-neptune-eu-central-1
    eu-west-1:
      Bucket: aws-bookstore-demo-app-eu-west-1
      NeptuneDataBucket: bookstore-neptune-eu-west-1

  Constants:
    AppKeys:
      SeedRepository: https://s3.amazonaws.com/aws-bookstore-demo/bookstore-webapp.zip
      
    S3Keys:
      ListOrdersCode: functions/ListOrders.zip
      GetBookCode: functions/GetBook.zip
      ListBooksCode: functions/ListBooks.zip
      UpdateCartCode: functions/UpdateCart.zip
      GetCartItemCode: functions/GetCartItem.zip
      ListItemsInCartCode: functions/ListItemsInCart.zip
      AddToCartCode: functions/AddToCart.zip
      RemoveFromCartCode: functions/RemoveFromCart.zip
      GetBestSellersCode: functions/GetBestSellers.zip
      CheckoutCode: functions/Checkout.zip
      UploadBooksCode: functions/UploadBooks.zip
      GetRecommendationsCode: functions/GetRecommendations.zip
      GetRecommendationsByBookCode: functions/GetRecommendationsByBook.zip
      SearchCode: functions/Search.zip
      UpdateSearchCode: functions/UpdateSearchCluster.zip
      UpdateBestSellersCode: functions/UpdateBestSellers.zip
      NeptuneLoaderCode: functions/NeptuneLoader.zip
      NeptuneIAMCode: functions/NeptuneIAM.zip
      bookstoreNeptuneS3DataPath: /data/
      booksData: data/books.json
      CreateOSRoleCode: functions/CreateOSRole.zip
      UpdateConfigCode: functions/UpdateConfig.zip
      PythonLambdaLayer: functions/PythonLambdaLayer.zip
      DeleteBucketsCode: functions/DeleteBuckets.zip
      SeederFunctionCode: functions/aws-serverless-codecommit-seeder.zip
      
Resources:
# ------------------------------------------------------------------------------
# BOOKSTORE VPC
# ------------------------------------------------------------------------------
  bookstoreVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: '172.31.0.0/16'
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'      

# ------------------------------------------------------------------------------
# DATABASE PRIVATE SUBNETS
# ------------------------------------------------------------------------------  
  bookstoreSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock:
        Fn::Select:
          - 0
          - Fn::Cidr:
            - Fn::GetAtt: [bookstoreVPC, CidrBlock]
            - 3
            - 8
      VpcId:
        Ref: bookstoreVPC
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs:
              Ref: "AWS::Region"

  bookstoreSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock:
        Fn::Select:
          - 1
          - Fn::Cidr:
            - Fn::GetAtt: [bookstoreVPC, CidrBlock]
            - 3
            - 8
      VpcId:
        Ref: bookstoreVPC
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs:
              Ref: "AWS::Region"  
              
  bookstoreVPCRouteTable:  
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref bookstoreVPC
  
  bookstoreVPCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref bookstoreVPCRouteTable
      SubnetId: !Ref bookstoreSubnet1

  bookstoreVPCRouteTableAssociationTwo:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref bookstoreVPCRouteTable
      SubnetId: !Ref bookstoreSubnet2    
    
  redisLambdaSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId:
        Ref: bookstoreVPC
      GroupDescription: "A component security group allowing access only to redis"  

  bookstoreCacheSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Elasticache security group
      SecurityGroupIngress:
        -
          IpProtocol: "tcp"
          FromPort: "6379"
          ToPort: "6379"
          SourceSecurityGroupId:
            Ref: redisLambdaSecurityGroup
      VpcId: !Ref bookstoreVPC

  bookstoreCacheSubnets:
    Type: 'AWS::ElastiCache::SubnetGroup'
    Properties:
      Description: Subnets for ElastiCache
      SubnetIds:
        - Ref: bookstoreSubnet1 

# ------------------------------------------------------------------------------
# CLOUD9 PUBLIC SUBNET
# ------------------------------------------------------------------------------
  Cloud9PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      MapPublicIpOnLaunch: True
      VpcId:
        !Ref bookstoreVPC
      AvailabilityZone: "eu-west-1a"
      CidrBlock: '172.31.9.0/24'
      Tags:
        - Key: Name
          Value: "bookstore serverless - cloud9 public subnet"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: "bookstore serverless - cloud9 internet gateway"

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: bookstoreVPC
      InternetGatewayId:
        Ref: InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: bookstoreVPC
      Tags:
        - Key: Name
          Value: "bookstore serverless - cloud9 public subnet route table"

  RouteToTheInternetGateway:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        !Ref InternetGateway
        
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        !Ref Cloud9PublicSubnet
      RouteTableId:
        !Ref PublicRouteTable

# ------------------------------------------------------------------------------
# OUTPUTS
# ------------------------------------------------------------------------------
Outputs:
  VpcId:
    Value: 
      Ref: bookstoreVPC
    Export:
      Name: BOOKSTORE-VPC
  PrivateSubnet1:
    Value: 
      !Ref bookstoreSubnet1
    Export:
      Name: BOOKSTORE-SUBNET-1
  PrivateSubnet2:
    Value: 
      !Ref bookstoreSubnet2
    Export:
      Name: BOOKSTORE-SUBNET-2
  RouteTable:
    Value: 
      !Ref bookstoreVPCRouteTable
    Export:
      Name: BOOKSTORE-VPC-ROUTE-TABLE
  VPCDefaultSecurityGroup:
    Value: 
      !GetAtt bookstoreVPC.DefaultSecurityGroup
    Export:
      Name: BOOKSTORE-DEFAULT-SECURITY-GROUP